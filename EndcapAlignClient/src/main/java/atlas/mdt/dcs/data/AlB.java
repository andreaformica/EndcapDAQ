package atlas.mdt.dcs.data;

// Generated Aug 31, 2012 4:54:30 PM by Hibernate Tools 3.4.0.CR1

import io.utils.MyPrinterHandler;

import java.math.BigDecimal;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;


/**
 * AlB generated by hbm2java
 */
@Entity
@Table(name = "AL_B", schema = "ATLAS_MDT_DCS")
@NamedQueries({
@NamedQuery(name = AlB.QUERY_GET_HISTORY, query = "FROM AlB as mt"
		+ " WHERE (mt.id.imageId = :id OR :id is null) AND mt.id.stime > :since AND mt.id.stime < :until"),
@NamedQuery(name = AlB.QUERY_GET_CYCLE, query = " FROM AlB as mt"
				+ " WHERE (mt.cycleNumber = :cycle) order by mt.id.stime asc")		
})
public class AlB implements java.io.Serializable, EcImage {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6092212550005050206L;

	public static Log log = LogFactory.getLog(AlB.class
			.getName());
	
	public static final String QUERY_GET_HISTORY = "alb.gethistory";
	public static final String QUERY_GET_CYCLE = "alb.getcycle";

	private AlBId id;
	private BigDecimal cycleNumber;
	private BigDecimal x;
	private BigDecimal y;
	private BigDecimal mag;
	private BigDecimal BPx;
	private BigDecimal BIn;
	private BigDecimal BSe;
	private BigDecimal BTh;
	private BigDecimal BEx;
	private BigDecimal BAv;
	private BigDecimal BSt;
	private BigDecimal BMx;
	private BigDecimal BMn;
	private BigDecimal BEc;
	private BigDecimal BNp;
	private BigDecimal BCo;
	private BigDecimal BBg;
	private BigDecimal BRn;

	public AlB() {
	}

	public AlB(AlBId id) {
		this.id = id;
	}

	public AlB(AlBId id, BigDecimal cycleNumber, BigDecimal x, BigDecimal y,
			BigDecimal mag, BigDecimal BPx, BigDecimal BIn, BigDecimal BSe,
			BigDecimal BTh, BigDecimal BEx, BigDecimal BAv, BigDecimal BSt,
			BigDecimal BMx, BigDecimal BMn, BigDecimal BEc, BigDecimal BNp,
			BigDecimal BCo, BigDecimal BBg, BigDecimal BRn) {
		this.id = id;
		this.cycleNumber = cycleNumber;
		this.x = x;
		this.y = y;
		this.mag = mag;
		this.BPx = BPx;
		this.BIn = BIn;
		this.BSe = BSe;
		this.BTh = BTh;
		this.BEx = BEx;
		this.BAv = BAv;
		this.BSt = BSt;
		this.BMx = BMx;
		this.BMn = BMn;
		this.BEc = BEc;
		this.BNp = BNp;
		this.BCo = BCo;
		this.BBg = BBg;
		this.BRn = BRn;
	}

	public AlB(AlB alb) {
		this.id = new AlBId(alb.getId());
		this.cycleNumber = alb.getCycleNumber();
		this.x = alb.getX();
		this.y = alb.getY();
		this.mag = alb.getMag();
		this.BPx = alb.getBPx();
		this.BIn = alb.getBIn();
		this.BSe = alb.getBSe();
		this.BTh = alb.getBTh();
		this.BEx = alb.getBEx();
		this.BAv = alb.getBAv();
		this.BSt = alb.getBSt();
		this.BMx = alb.getBMx();
		this.BMn = alb.getBMn();
		this.BEc = alb.getBEc();
		this.BNp = alb.getBNp();
		this.BCo = alb.getBCo();
		this.BBg = alb.getBBg();
		this.BRn = alb.getBRn();
	}

	
	@SuppressWarnings("unchecked")
	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "stime", column = @Column(name = "STIME", nullable = false, precision = 20, scale = 0)),
			@AttributeOverride(name = "imageId", column = @Column(name = "IMAGE_ID", nullable = false, precision = 10, scale = 0)) })
	public AlBId getId() {
		return this.id;
	}

	public void setId(AlBId id) {
		this.id = id;
	}

	@Column(name = "CYCLE_NUMBER", precision = 22, scale = 0)
	public BigDecimal getCycleNumber() {
		return this.cycleNumber;
	}

	public void setCycleNumber(BigDecimal cycleNumber) {
		this.cycleNumber = cycleNumber;
	}

	@Column(name = "X", precision = 22, scale = 0)
	public BigDecimal getX() {
		return this.x;
	}

	public void setX(BigDecimal x) {
		this.x = x;
	}

	@Column(name = "Y", precision = 22, scale = 0)
	public BigDecimal getY() {
		return this.y;
	}

	public void setY(BigDecimal y) {
		this.y = y;
	}

	@Column(name = "MAG", precision = 22, scale = 0)
	public BigDecimal getMag() {
		return this.mag;
	}

	public void setMag(BigDecimal mag) {
		this.mag = mag;
	}

	@Column(name = "B_PX", precision = 22, scale = 0)
	public BigDecimal getBPx() {
		return this.BPx;
	}

	public void setBPx(BigDecimal BPx) {
		this.BPx = BPx;
	}

	@Column(name = "B_IN", precision = 22, scale = 0)
	public BigDecimal getBIn() {
		return this.BIn;
	}

	public void setBIn(BigDecimal BIn) {
		this.BIn = BIn;
	}

	@Column(name = "B_SE", precision = 22, scale = 0)
	public BigDecimal getBSe() {
		return this.BSe;
	}

	public void setBSe(BigDecimal BSe) {
		this.BSe = BSe;
	}

	@Column(name = "B_TH", precision = 22, scale = 0)
	public BigDecimal getBTh() {
		return this.BTh;
	}

	public void setBTh(BigDecimal BTh) {
		this.BTh = BTh;
	}

	@Column(name = "B_EX", precision = 22, scale = 0)
	public BigDecimal getBEx() {
		return this.BEx;
	}

	public void setBEx(BigDecimal BEx) {
		this.BEx = BEx;
	}

	@Column(name = "B_AV", precision = 22, scale = 0)
	public BigDecimal getBAv() {
		return this.BAv;
	}

	public void setBAv(BigDecimal BAv) {
		this.BAv = BAv;
	}

	@Column(name = "B_ST", precision = 22, scale = 0)
	public BigDecimal getBSt() {
		return this.BSt;
	}

	public void setBSt(BigDecimal BSt) {
		this.BSt = BSt;
	}

	@Column(name = "B_MX", precision = 22, scale = 0)
	public BigDecimal getBMx() {
		return this.BMx;
	}

	public void setBMx(BigDecimal BMx) {
		this.BMx = BMx;
	}

	@Column(name = "B_MN", precision = 22, scale = 0)
	public BigDecimal getBMn() {
		return this.BMn;
	}

	public void setBMn(BigDecimal BMn) {
		this.BMn = BMn;
	}

	@Column(name = "B_EC", precision = 22, scale = 0)
	public BigDecimal getBEc() {
		return this.BEc;
	}

	public void setBEc(BigDecimal BEc) {
		this.BEc = BEc;
	}

	@Column(name = "B_NP", precision = 22, scale = 0)
	public BigDecimal getBNp() {
		return this.BNp;
	}

	public void setBNp(BigDecimal BNp) {
		this.BNp = BNp;
	}

	@Column(name = "B_CO", precision = 22, scale = 0)
	public BigDecimal getBCo() {
		return this.BCo;
	}

	public void setBCo(BigDecimal BCo) {
		this.BCo = BCo;
	}

	@Column(name = "B_BG", precision = 22, scale = 0)
	public BigDecimal getBBg() {
		return this.BBg;
	}

	public void setBBg(BigDecimal BBg) {
		this.BBg = BBg;
	}

	@Column(name = "B_RN", precision = 22, scale = 0)
	public BigDecimal getBRn() {
		return this.BRn;
	}

	public void setBRn(BigDecimal BRn) {
		this.BRn = BRn;
	}

	/**
	 * toString().
	 */
	@Override
	public String toString() {
		MyPrinterHandler<AlB> handler = new MyPrinterHandler<AlB>(this, " ");
		String _mobj = "none";
		try {
			handler.add(this.getClass().getDeclaredMethod("getId", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getCycleNumber", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getX", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getY", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getMag", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBPx", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBIn", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBSe", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBTh", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBEx", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBAv", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBSt", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBMx", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBMn", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBEc", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBNp", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBCo", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBBg", (Class[]) null));
			handler.add(this.getClass().getDeclaredMethod("getBRn", (Class[]) null));

			_mobj = handler.print();
		} catch (SecurityException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (NoSuchMethodException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return _mobj;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (obj == this) {
			return true;
		}
		if (!(obj instanceof AlB)) {
			return false;
		}
		AlB idobj = (AlB) obj;

		if (!id.equals(idobj.getId())) {
			return false;
		}
		if (cycleNumber.compareTo(idobj.getCycleNumber()) != 0) {
			return false;
		}
		if (x.compareTo(idobj.getX()) != 0) {
			return false;
		}
		if (y.compareTo(idobj.getY()) != 0) {
			return false;
		}
		if (mag.compareTo(idobj.getMag()) != 0) {
			return false;
		}
		return true;
	}
	
	@Override
	public int hashCode() {
		return id.hashCode() + cycleNumber.hashCode()+x.hashCode()+y.hashCode()+mag.hashCode();
	}

}
